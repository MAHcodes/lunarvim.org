import{r as p,o,c,a as n,b as t,F as l,d as s,e}from"./app.d32544d0.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const i={},r=n("h1",{id:"extra-plugins",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#extra-plugins","aria-hidden":"true"},"#"),s(" Extra Plugins")],-1),k=n("p",null,"Every plugin that works with Neovim works with LunarVim, here are some examples to get you started.",-1),d=n("h2",{id:"navigation-plugins",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#navigation-plugins","aria-hidden":"true"},"#"),s(" Navigation plugins")],-1),b={id:"hop",tabindex:"-1"},m=n("a",{class:"header-anchor",href:"#hop","aria-hidden":"true"},"#",-1),g=s(),h={href:"https://github.com/phaazon/hop.nvim",target:"_blank",rel:"noopener noreferrer"},_=s("hop"),q=e(`<p><strong>neovim motions on speed!</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;phaazon/hop.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;hop&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_set_keymap</span><span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;s&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;:HopChar2&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> silent <span class="token operator">=</span> <span class="token keyword">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_set_keymap</span><span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;S&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;:HopWord&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> silent <span class="token operator">=</span> <span class="token keyword">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,2),f={id:"lightspeed",tabindex:"-1"},v=n("a",{class:"header-anchor",href:"#lightspeed","aria-hidden":"true"},"#",-1),w=s(),y={href:"https://github.com/ggandor/lightspeed.nvim",target:"_blank",rel:"noopener noreferrer"},x=s("lightspeed"),B=e(`<p><strong>jetpack codebase navigation</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;ggandor/lightspeed.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),R={id:"minimap",tabindex:"-1"},T=n("a",{class:"header-anchor",href:"#minimap","aria-hidden":"true"},"#",-1),z=s(),G={href:"https://github.com/wfxr/minimap.vim",target:"_blank",rel:"noopener noreferrer"},S=s("minimap"),C=e(`<p><strong>blazing fast minimap/scrollbar written in Rust</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&#39;wfxr/minimap.vim&#39;</span><span class="token punctuation">,</span>
  run <span class="token operator">=</span> <span class="token string">&quot;cargo install --locked code-minimap&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">-- cmd = {&quot;Minimap&quot;, &quot;MinimapClose&quot;, &quot;MinimapToggle&quot;, &quot;MinimapRefresh&quot;, &quot;MinimapUpdateHighlight&quot;},</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span><span class="token function">cmd</span> <span class="token punctuation">(</span><span class="token string">&quot;let g:minimap_width = 10&quot;</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span><span class="token function">cmd</span> <span class="token punctuation">(</span><span class="token string">&quot;let g:minimap_auto_start = 1&quot;</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span><span class="token function">cmd</span> <span class="token punctuation">(</span><span class="token string">&quot;let g:minimap_auto_start_win_enter = 1&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,2),E={id:"numb",tabindex:"-1"},A=n("a",{class:"header-anchor",href:"#numb","aria-hidden":"true"},"#",-1),P=s(),j={href:"https://github.com/nacro90/numb.nvim",target:"_blank",rel:"noopener noreferrer"},F=s("numb"),N=e(`<p><strong>jump to the line</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;nacro90/numb.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;numb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span> <span class="token punctuation">{</span>
    show_numbers <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- Enable &#39;number&#39; for the window while peeking</span>
    show_cursorline <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- Enable &#39;cursorline&#39; for the window while peeking</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,2),V={id:"nvim-bqf",tabindex:"-1"},H=n("a",{class:"header-anchor",href:"#nvim-bqf","aria-hidden":"true"},"#",-1),M=s(),W={href:"https://github.com/kevinhwang91/nvim-bqf",target:"_blank",rel:"noopener noreferrer"},L=s("nvim-bqf"),I=e(`<p><strong>better quickfix window</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;kevinhwang91/nvim-bqf&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BufNew&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;bqf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          auto_enable <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>
          preview <span class="token operator">=</span> <span class="token punctuation">{</span>
          win_height <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">,</span>
          win_vheight <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">,</span>
          delay_syntax <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">,</span>
          border_chars <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;\u2503&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2503&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2501&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2501&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u250F&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2513&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2517&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u251B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2588&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          func_map <span class="token operator">=</span> <span class="token punctuation">{</span>
          vsplit <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
          ptogglemode <span class="token operator">=</span> <span class="token string">&quot;z,&quot;</span><span class="token punctuation">,</span>
          stoggleup <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          filter <span class="token operator">=</span> <span class="token punctuation">{</span>
          fzf <span class="token operator">=</span> <span class="token punctuation">{</span>
          action_for <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token string">&quot;ctrl-s&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;split&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          extra_opts <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;--bind&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ctrl-o:toggle-all&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--prompt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&gt; &quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div>`,2),D={id:"nvim-spectre",tabindex:"-1"},O=n("a",{class:"header-anchor",href:"#nvim-spectre","aria-hidden":"true"},"#",-1),Y=s(),J={href:"https://github.com/windwp/nvim-spectre",target:"_blank",rel:"noopener noreferrer"},K=s("nvim-spectre"),Q=e(`<p><strong>search and replace</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;windwp/nvim-spectre&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;spectre&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,2),U={id:"rnvimr",tabindex:"-1"},X=n("a",{class:"header-anchor",href:"#rnvimr","aria-hidden":"true"},"#",-1),Z=s(),$={href:"https://github.com/kevinhwang91/rnvimr",target:"_blank",rel:"noopener noreferrer"},nn=s("rnvimr"),sn=e(`<p><strong>ranger file explorer window</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;kevinhwang91/rnvimr&quot;</span><span class="token punctuation">,</span>
    cmd <span class="token operator">=</span> <span class="token string">&quot;RnvimrToggle&quot;</span><span class="token punctuation">,</span>
    config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>rnvimr_draw_border <span class="token operator">=</span> <span class="token number">1</span>
      vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>rnvimr_pick_enable <span class="token operator">=</span> <span class="token number">1</span>
      vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>rnvimr_bw_enable <span class="token operator">=</span> <span class="token number">1</span>
      <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,2),an={id:"snap",tabindex:"-1"},tn=n("a",{class:"header-anchor",href:"#snap","aria-hidden":"true"},"#",-1),en=s(),pn={href:"https://github.com/camspiers/snap",target:"_blank",rel:"noopener noreferrer"},on=s("snap"),cn=e(`<p><strong>fast finder system</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;camspiers/snap&quot;</span><span class="token punctuation">,</span>
  rocks <span class="token operator">=</span> <span class="token string">&quot;fzy&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">local</span> snap <span class="token operator">=</span> require <span class="token string">&quot;snap&quot;</span>
    <span class="token keyword">local</span> layout <span class="token operator">=</span> snap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;layout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>bottom
    <span class="token keyword">local</span> file <span class="token operator">=</span> snap<span class="token punctuation">.</span>config<span class="token punctuation">.</span>file<span class="token punctuation">:</span><span class="token function">with</span> <span class="token punctuation">{</span> consumer <span class="token operator">=</span> <span class="token string">&quot;fzy&quot;</span><span class="token punctuation">,</span> layout <span class="token operator">=</span> layout <span class="token punctuation">}</span>
    <span class="token keyword">local</span> vimgrep <span class="token operator">=</span> snap<span class="token punctuation">.</span>config<span class="token punctuation">.</span>vimgrep<span class="token punctuation">:</span><span class="token function">with</span> <span class="token punctuation">{</span> layout <span class="token operator">=</span> layout <span class="token punctuation">}</span>
    snap<span class="token punctuation">.</span>register<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;find_files&quot;</span><span class="token punctuation">,</span> <span class="token function">file</span> <span class="token punctuation">{</span> producer <span class="token operator">=</span> <span class="token string">&quot;ripgrep.file&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    snap<span class="token punctuation">.</span>register<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;buffers&quot;</span><span class="token punctuation">,</span> <span class="token function">file</span> <span class="token punctuation">{</span> producer <span class="token operator">=</span> <span class="token string">&quot;vim.buffer&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    snap<span class="token punctuation">.</span>register<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;oldfiles&quot;</span><span class="token punctuation">,</span> <span class="token function">file</span> <span class="token punctuation">{</span> producer <span class="token operator">=</span> <span class="token string">&quot;vim.oldfile&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    snap<span class="token punctuation">.</span>register<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;live_grep&quot;</span><span class="token punctuation">,</span> <span class="token function">vimgrep</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,2),ln={id:"vim-matchup",tabindex:"-1"},un=n("a",{class:"header-anchor",href:"#vim-matchup","aria-hidden":"true"},"#",-1),rn=s(),kn={href:"https://github.com/andymass/vim-matchup",target:"_blank",rel:"noopener noreferrer"},dn=s("vim-matchup"),bn=e(`<p><strong>navigate and highlight matching words</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;andymass/vim-matchup&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;CursorMoved&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>matchup_matchparen_offscreen <span class="token operator">=</span> <span class="token punctuation">{</span> method <span class="token operator">=</span> <span class="token string">&quot;popup&quot;</span> <span class="token punctuation">}</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,2),mn={id:"nvim-window-picker",tabindex:"-1"},gn=n("a",{class:"header-anchor",href:"#nvim-window-picker","aria-hidden":"true"},"#",-1),hn=s(),_n={href:"https://github.com/s1n7ax/nvim-window-picker",target:"_blank",rel:"noopener noreferrer"},qn=s("nvim-window-picker"),fn=e(`<p><strong>jump to any window using a selector like the one nvim-tree uses</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
      <span class="token string">&quot;s1n7ax/nvim-window-picker&quot;</span><span class="token punctuation">,</span>
      tag <span class="token operator">=</span> <span class="token string">&quot;1.*&quot;</span><span class="token punctuation">,</span>
      config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;window-picker&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          autoselect_one <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>
          include_current <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">,</span>
          filter_rules <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token comment">-- filter using buffer options</span>
            bo <span class="token operator">=</span> <span class="token punctuation">{</span>
              <span class="token comment">-- if the file type is one of following, the window will be ignored</span>
              filetype <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;neo-tree&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;neo-tree-popup&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;notify&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;quickfix&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>

              <span class="token comment">-- if the buffer type is one of following, the window will be ignored</span>
              buftype <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;terminal&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          other_win_hl_color <span class="token operator">=</span> <span class="token string">&quot;#e35e4f&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token keyword">end</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
 
<span class="token comment">-- example mappings you can place in some other place</span>
<span class="token comment">-- An awesome method to jump to windows</span>
<span class="token keyword">local</span> picker <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;window-picker&#39;</span><span class="token punctuation">)</span>

vim<span class="token punctuation">.</span>keymap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;,w&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">local</span> picked_window_id <span class="token operator">=</span> picker<span class="token punctuation">.</span><span class="token function">pick_window</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    include_current_win <span class="token operator">=</span> <span class="token keyword">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">or</span> vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_get_current_win</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_set_current_win</span><span class="token punctuation">(</span>picked_window_id<span class="token punctuation">)</span>
<span class="token keyword">end</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> desc <span class="token operator">=</span> <span class="token string">&quot;Pick a window&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">-- Swap two windows using the awesome window picker</span>
<span class="token keyword">local</span> <span class="token keyword">function</span> <span class="token function">swap_windows</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">local</span> window <span class="token operator">=</span> picker<span class="token punctuation">.</span><span class="token function">pick_window</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    include_current_win <span class="token operator">=</span> <span class="token keyword">false</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">local</span> target_buffer <span class="token operator">=</span> vim<span class="token punctuation">.</span>fn<span class="token punctuation">.</span><span class="token function">winbufnr</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span>
  <span class="token comment">-- Set the target window to contain current buffer</span>
  vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_win_set_buf</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token comment">-- Set current window to contain target buffer</span>
  vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_win_set_buf</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> target_buffer<span class="token punctuation">)</span>
<span class="token keyword">end</span>

vim<span class="token punctuation">.</span>keymap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;,W&#39;</span><span class="token punctuation">,</span> swap_windows<span class="token punctuation">,</span> <span class="token punctuation">{</span> desc <span class="token operator">=</span> <span class="token string">&#39;Swap windows&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><h2 id="git" tabindex="-1"><a class="header-anchor" href="#git" aria-hidden="true">#</a> Git</h2>`,3),vn={id:"diffview",tabindex:"-1"},wn=n("a",{class:"header-anchor",href:"#diffview","aria-hidden":"true"},"#",-1),yn=s(),xn={href:"https://github.com/sindrets/diffview.nvim",target:"_blank",rel:"noopener noreferrer"},Bn=s("diffview"),Rn=e(`<p><strong>git diff in a single tabpage</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;sindrets/diffview.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),Tn={id:"git-blame",tabindex:"-1"},zn=n("a",{class:"header-anchor",href:"#git-blame","aria-hidden":"true"},"#",-1),Gn=s(),Sn={href:"https://github.com/f-person/git-blame.nvim",target:"_blank",rel:"noopener noreferrer"},Cn=s("git-blame"),En=e(`<p><strong>show git blame</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;f-person/git-blame.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span>cmd <span class="token string">&quot;highlight default link gitblame SpecialComment&quot;</span>
    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>gitblame_enabled <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,2),An={id:"gitlinker",tabindex:"-1"},Pn=n("a",{class:"header-anchor",href:"#gitlinker","aria-hidden":"true"},"#",-1),jn=s(),Fn={href:"https://github.com/ruifm/gitlinker.nvim",target:"_blank",rel:"noopener noreferrer"},Nn=s("gitlinker"),Vn=e(`<p><strong>generate shareable file permalinks for several git web frontend hosts</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;ruifm/gitlinker.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;gitlinker&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span> <span class="token punctuation">{</span>
        opts <span class="token operator">=</span> <span class="token punctuation">{</span>
          <span class="token comment">-- remote = &#39;github&#39;, -- force the use of a specific remote</span>
            <span class="token comment">-- adds current line nr in the url for normal mode</span>
            add_current_line_on_normal_mode <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>
          <span class="token comment">-- callback for what to do with the url</span>
            action_callback <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;gitlinker.actions&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>open_in_browser<span class="token punctuation">,</span>
          <span class="token comment">-- print the url after performing the action</span>
            print_url <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">,</span>
          <span class="token comment">-- mapping to call url generation</span>
            mappings <span class="token operator">=</span> <span class="token string">&quot;&lt;leader&gt;gy&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
  requires <span class="token operator">=</span> <span class="token string">&quot;nvim-lua/plenary.nvim&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,2),Hn={id:"octo",tabindex:"-1"},Mn=n("a",{class:"header-anchor",href:"#octo","aria-hidden":"true"},"#",-1),Wn=s(),Ln={href:"https://github.com/pwntester/octo.nvim",target:"_blank",rel:"noopener noreferrer"},In=s("octo"),Dn=e(`<p><strong>edit and review GitHub issues and pull requests</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;pwntester/octo.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),On={id:"vim-fugitive",tabindex:"-1"},Yn=n("a",{class:"header-anchor",href:"#vim-fugitive","aria-hidden":"true"},"#",-1),Jn=s(),Kn={href:"https://github.com/tpope/vim-fugitive",target:"_blank",rel:"noopener noreferrer"},Qn=s("vim-fugitive"),Un=e(`<p><strong>git wrapper</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;tpope/vim-fugitive&quot;</span><span class="token punctuation">,</span>
  cmd <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;G&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Git&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Gdiffsplit&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Gread&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Gwrite&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Ggrep&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;GMove&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;GDelete&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;GBrowse&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;GRemove&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;GRename&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Glgrep&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Gedit&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  ft <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;fugitive&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,2),Xn={id:"vim-gist",tabindex:"-1"},Zn=n("a",{class:"header-anchor",href:"#vim-gist","aria-hidden":"true"},"#",-1),$n=s(),ns={href:"https://github.com/mattn/vim-gist",target:"_blank",rel:"noopener noreferrer"},ss=s("vim-gist"),as=e(`<p><strong>create/edit Github gists</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;mattn/vim-gist&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  requires <span class="token operator">=</span> <span class="token string">&quot;mattn/webapi-vim&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="treesitter" tabindex="-1"><a class="header-anchor" href="#treesitter" aria-hidden="true">#</a> Treesitter</h2>`,3),ts={id:"nvim-ts-autotag",tabindex:"-1"},es=n("a",{class:"header-anchor",href:"#nvim-ts-autotag","aria-hidden":"true"},"#",-1),ps=s(),os={href:"https://github.com/windwp/nvim-ts-autotag",target:"_blank",rel:"noopener noreferrer"},cs=s("nvim-ts-autotag"),ls=e(`<p><strong>autoclose and autorename html tag</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;windwp/nvim-ts-autotag&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;nvim-ts-autotag&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,2),us={id:"nvim-ts-context-commentstring",tabindex:"-1"},is=n("a",{class:"header-anchor",href:"#nvim-ts-context-commentstring","aria-hidden":"true"},"#",-1),rs=s(),ks={href:"https://github.com/JoosepAlviste/nvim-ts-context-commentstring",target:"_blank",rel:"noopener noreferrer"},ds=s("nvim-ts-context-commentstring"),bs=e(`<p><strong>commentstring option based on the cursor location</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;JoosepAlviste/nvim-ts-context-commentstring&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),ms={id:"nvim-ts-rainbow",tabindex:"-1"},gs=n("a",{class:"header-anchor",href:"#nvim-ts-rainbow","aria-hidden":"true"},"#",-1),hs=s(),_s={href:"https://github.com/p00f/nvim-ts-rainbow",target:"_blank",rel:"noopener noreferrer"},qs=s("nvim-ts-rainbow"),fs=e(`<p><strong>rainbow parentheses</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;p00f/nvim-ts-rainbow&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>After installing ensure to enable it in your <code>config.lua</code> using:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>...
lvim.builtin.treesitter.rainbow.enable = true
...
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,4),vs={id:"playground",tabindex:"-1"},ws=n("a",{class:"header-anchor",href:"#playground","aria-hidden":"true"},"#",-1),ys=s(),xs={href:"https://github.com/nvim-treesitter/playground",target:"_blank",rel:"noopener noreferrer"},Bs=s("playground"),Rs=e(`<p><strong>view treesitter information</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;nvim-treesitter/playground&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),Ts={id:"nvim-treesitter-context",tabindex:"-1"},zs=n("a",{class:"header-anchor",href:"#nvim-treesitter-context","aria-hidden":"true"},"#",-1),Gs=s(),Ss={href:"https://github.com/romgrk/nvim-treesitter-context",target:"_blank",rel:"noopener noreferrer"},Cs=s("nvim-treesitter-context"),Es=e(`<p><strong>Show current function at the top of the screen when function does not fit in screen</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
    <span class="token string">&quot;romgrk/nvim-treesitter-context&quot;</span><span class="token punctuation">,</span>
    config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;treesitter-context&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">{</span>
        enable <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- Enable this plugin (Can be enabled/disabled later via commands)</span>
        throttle <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- Throttles plugin updates (may improve performance)</span>
        max_lines <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">-- How many lines the window should span. Values &lt;= 0 mean no limit.</span>
        patterns <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">-- Match patterns for TS nodes. These get wrapped to match at word boundaries.</span>
          <span class="token comment">-- For all filetypes</span>
          <span class="token comment">-- Note that setting an entry here replaces all other patterns for this entry.</span>
          <span class="token comment">-- By setting the &#39;default&#39; entry below, you can control which nodes you want to</span>
          <span class="token comment">-- appear in the context window.</span>
          default <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;class&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;function&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;method&#39;</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token keyword">end</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="telescope-extensions" tabindex="-1"><a class="header-anchor" href="#telescope-extensions" aria-hidden="true">#</a> Telescope Extensions</h2><h3 id="how-to-install-telescope-extensions" tabindex="-1"><a class="header-anchor" href="#how-to-install-telescope-extensions" aria-hidden="true">#</a> How to install telescope extensions</h3><p>First <strong>add your telescope extension to the list of plugins</strong> as usual (<code>lvim.plugins = { ... }</code>) following the extension instructions. There are several ways to register extensions within telescope, but the safer is using the <code>on_config_done</code> callback for telescope. Create the callback function anywhere in your <code>config.lua</code>. This function will be called when telescope has finished loading and will get telescope as its only parameter. Finally, within the <code>on_config_done</code> callback register your extension :</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>builtin<span class="token punctuation">.</span>telescope<span class="token punctuation">.</span>on_config_done <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>telescope<span class="token punctuation">)</span>
  <span class="token function">pcall</span><span class="token punctuation">(</span>telescope<span class="token punctuation">.</span>load_extension<span class="token punctuation">,</span> <span class="token string">&quot;frecency&quot;</span><span class="token punctuation">)</span>
  <span class="token function">pcall</span><span class="token punctuation">(</span>telescope<span class="token punctuation">.</span>load_extension<span class="token punctuation">,</span> <span class="token string">&quot;neoclip&quot;</span><span class="token punctuation">)</span>
  <span class="token comment">-- any other extensions loading</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,6),As={id:"telescope-fzy-native-nvim",tabindex:"-1"},Ps=n("a",{class:"header-anchor",href:"#telescope-fzy-native-nvim","aria-hidden":"true"},"#",-1),js=s(),Fs={href:"https://github.com/nvim-telescope/telescope-fzy-native.nvim",target:"_blank",rel:"noopener noreferrer"},Ns=s("telescope-fzy-native.nvim"),Vs=e(`<p><strong>fzy style sorter that is compiled</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;nvim-telescope/telescope-fzy-native.nvim&quot;</span><span class="token punctuation">,</span>
  run <span class="token operator">=</span> <span class="token string">&quot;make&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,2),Hs={id:"telescope-project",tabindex:"-1"},Ms=n("a",{class:"header-anchor",href:"#telescope-project","aria-hidden":"true"},"#",-1),Ws=s(),Ls={href:"https://github.com/nvim-telescope/telescope-project.nvim",target:"_blank",rel:"noopener noreferrer"},Is=s("telescope-project"),Ds=e(`<p><strong>switch between projects</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;nvim-telescope/telescope-project.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufWinEnter&quot;</span><span class="token punctuation">,</span>
  setup <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span>cmd <span class="token string">[[packadd telescope.nvim]]</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="colorschemes" tabindex="-1"><a class="header-anchor" href="#colorschemes" aria-hidden="true">#</a> Colorschemes</h2>`,3),Os={id:"lsp-colors",tabindex:"-1"},Ys=n("a",{class:"header-anchor",href:"#lsp-colors","aria-hidden":"true"},"#",-1),Js=s(),Ks={href:"https://github.com/folke/lsp-colors.nvim",target:"_blank",rel:"noopener noreferrer"},Qs=s("lsp-colors"),Us=e(`<p><strong>lsp diagnostics highlight groups for non lsp colorschemes</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;folke/lsp-colors.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),Xs={id:"lush-nvim",tabindex:"-1"},Zs=n("a",{class:"header-anchor",href:"#lush-nvim","aria-hidden":"true"},"#",-1),$s=s(),na={href:"https://github.com/rktjmp/lush.nvim",target:"_blank",rel:"noopener noreferrer"},sa=s("lush.nvim"),aa=e(`<p><strong>colorscheme creation aid</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;rktjmp/lush.nvim&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,2),ta={id:"nvim-colorizer",tabindex:"-1"},ea=n("a",{class:"header-anchor",href:"#nvim-colorizer","aria-hidden":"true"},"#",-1),pa=s(),oa={href:"https://github.com/norcalli/nvim-colorizer.lua",target:"_blank",rel:"noopener noreferrer"},ca=s("nvim-colorizer"),la=e(`<p><strong>color highlighter</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;norcalli/nvim-colorizer.lua&quot;</span><span class="token punctuation">,</span>
    config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;colorizer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&quot;css&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;scss&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;html&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;javascript&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
          RGB <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- #RGB hex codes</span>
          RRGGBB <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- #RRGGBB hex codes</span>
          RRGGBBAA <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- #RRGGBBAA hex codes</span>
          rgb_fn <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- CSS rgb() and rgba() functions</span>
          hsl_fn <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- CSS hsl() and hsla() functions</span>
          css <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- Enable all CSS features: rgb_fn, hsl_fn, names, RGB, RRGGBB</span>
          css_fn <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- Enable all CSS *functions*: rgb_fn, hsl_fn</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="lsp-enhancement" tabindex="-1"><a class="header-anchor" href="#lsp-enhancement" aria-hidden="true">#</a> LSP Enhancement</h2>`,3),ua={id:"cmp-tabnine",tabindex:"-1"},ia=n("a",{class:"header-anchor",href:"#cmp-tabnine","aria-hidden":"true"},"#",-1),ra=s(),ka={href:"https://github.com/tzachar/cmp-tabnine",target:"_blank",rel:"noopener noreferrer"},da=s("cmp-tabnine"),ba=e(`<p><strong>TabNine completion engine for hrsh7th/nvim-cmp</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;tzachar/cmp-tabnine&quot;</span><span class="token punctuation">,</span>
  run <span class="token operator">=</span> <span class="token string">&quot;./install.sh&quot;</span><span class="token punctuation">,</span>
  requires <span class="token operator">=</span> <span class="token string">&quot;hrsh7th/nvim-cmp&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;InsertEnter&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,2),ma={id:"goto-preview",tabindex:"-1"},ga=n("a",{class:"header-anchor",href:"#goto-preview","aria-hidden":"true"},"#",-1),ha=s(),_a={href:"https://github.com/rmagatti/goto-preview",target:"_blank",rel:"noopener noreferrer"},qa=s("goto-preview"),fa=e(`<p><strong>previewing goto definition calls</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;rmagatti/goto-preview&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;goto-preview&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span> <span class="token punctuation">{</span>
        width <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span> <span class="token comment">-- Width of the floating window</span>
        height <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span> <span class="token comment">-- Height of the floating window</span>
        default_mappings <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">;</span> <span class="token comment">-- Bind default mappings</span>
        debug <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">;</span> <span class="token comment">-- Print debug information</span>
        opacity <span class="token operator">=</span> <span class="token keyword">nil</span><span class="token punctuation">;</span> <span class="token comment">-- 0-100 opacity level of the floating window where 100 is fully transparent.</span>
        post_open_hook <span class="token operator">=</span> <span class="token keyword">nil</span> <span class="token comment">-- A function taking two arguments, a buffer and a window to be ran as a hook.</span>
        <span class="token comment">-- You can use &quot;default_mappings = true&quot; setup option</span>
        <span class="token comment">-- Or explicitly set keybindings</span>
        <span class="token comment">-- vim.cmd(&quot;nnoremap gpd &lt;cmd&gt;lua require(&#39;goto-preview&#39;).goto_preview_definition()&lt;CR&gt;&quot;)</span>
        <span class="token comment">-- vim.cmd(&quot;nnoremap gpi &lt;cmd&gt;lua require(&#39;goto-preview&#39;).goto_preview_implementation()&lt;CR&gt;&quot;)</span>
        <span class="token comment">-- vim.cmd(&quot;nnoremap gP &lt;cmd&gt;lua require(&#39;goto-preview&#39;).close_all_win()&lt;CR&gt;&quot;)</span>
    <span class="token punctuation">}</span>
  <span class="token keyword">end</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,2),va={id:"lsp-rooter",tabindex:"-1"},wa=n("a",{class:"header-anchor",href:"#lsp-rooter","aria-hidden":"true"},"#",-1),ya=s(),xa={href:"https://github.com/ahmedkhalf/lsp-rooter.nvim",target:"_blank",rel:"noopener noreferrer"},Ba=s("lsp-rooter"),Ra=e(`<p><strong>cwd to the project&#39;s root directory</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;ahmedkhalf/lsp-rooter.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;lsp-rooter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,2),Ta={id:"lsp-signature-nvim",tabindex:"-1"},za=n("a",{class:"header-anchor",href:"#lsp-signature-nvim","aria-hidden":"true"},"#",-1),Ga=s(),Sa={href:"https://github.com/ray-x/lsp_signature.nvim",target:"_blank",rel:"noopener noreferrer"},Ca=s("lsp_signature.nvim"),Ea=e(`<p><strong>hint when you type</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;ray-x/lsp_signature.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> require<span class="token string">&quot;lsp_signature&quot;</span><span class="token punctuation">.</span><span class="token function">on_attach</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,2),Aa={id:"symbols-outline-nvim",tabindex:"-1"},Pa=n("a",{class:"header-anchor",href:"#symbols-outline-nvim","aria-hidden":"true"},"#",-1),ja=s(),Fa={href:"https://github.com/simrat39/symbols-outline.nvim",target:"_blank",rel:"noopener noreferrer"},Na=s("symbols-outline.nvim"),Va=e(`<p><strong>a tree like view for symbols</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;simrat39/symbols-outline.nvim&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;symbols-outline&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,2),Ha={id:"trouble-nvim",tabindex:"-1"},Ma=n("a",{class:"header-anchor",href:"#trouble-nvim","aria-hidden":"true"},"#",-1),Wa=s(),La={href:"https://github.com/folke/trouble.nvim",target:"_blank",rel:"noopener noreferrer"},Ia=s("trouble.nvim"),Da=e(`<p><strong>diagnostics, references, telescope results, quickfix and location lists</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;folke/trouble.nvim&quot;</span><span class="token punctuation">,</span>
    cmd <span class="token operator">=</span> <span class="token string">&quot;TroubleToggle&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Also define keybindings in <code>config.lua</code></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>builtin<span class="token punctuation">.</span>which_key<span class="token punctuation">.</span>mappings<span class="token punctuation">[</span><span class="token string">&quot;t&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name <span class="token operator">=</span> <span class="token string">&quot;Diagnostics&quot;</span><span class="token punctuation">,</span>
  t <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;TroubleToggle&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;trouble&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  w <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;TroubleToggle workspace_diagnostics&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;workspace&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  d <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;TroubleToggle document_diagnostics&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;document&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  q <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;TroubleToggle quickfix&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;quickfix&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  l <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;TroubleToggle loclist&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;loclist&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  r <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;TroubleToggle lsp_references&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;references&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="general" tabindex="-1"><a class="header-anchor" href="#general" aria-hidden="true">#</a> General</h2>`,5),Oa={id:"autosave",tabindex:"-1"},Ya=n("a",{class:"header-anchor",href:"#autosave","aria-hidden":"true"},"#",-1),Ja=s(),Ka={href:"https://github.com/Pocco81/AutoSave.nvim",target:"_blank",rel:"noopener noreferrer"},Qa=s("autosave"),Ua=e(`<p><strong>automatically saving your work whenever you make changes to it</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;Pocco81/AutoSave.nvim&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;autosave&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,2),Xa={id:"codi-vim",tabindex:"-1"},Za=n("a",{class:"header-anchor",href:"#codi-vim","aria-hidden":"true"},"#",-1),$a=s(),nt={href:"https://github.com/metakirby5/codi.vim",target:"_blank",rel:"noopener noreferrer"},st=s("codi.vim"),at=e(`<p><strong>interactive scratchpad for hackers</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;metakirby5/codi.vim&quot;</span><span class="token punctuation">,</span>
  cmd <span class="token operator">=</span> <span class="token string">&quot;Codi&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),tt={id:"copilot-lua-and-copilot-cmp",tabindex:"-1"},et=n("a",{class:"header-anchor",href:"#copilot-lua-and-copilot-cmp","aria-hidden":"true"},"#",-1),pt=s(),ot={href:"https://github.com/zbirenbaum/copilot.lua",target:"_blank",rel:"noopener noreferrer"},ct=s("copilot.lua"),lt=s(" and "),ut={href:"https://github.com/zbirenbaum/copilot-cmp",target:"_blank",rel:"noopener noreferrer"},it=s("copilot-cmp"),rt=n("p",null,[n("strong",null,"let a computer write code for you")],-1),kt=s("You need to authenticate according to "),dt={href:"https://github.com/zbirenbaum/copilot.lua#preliminary-steps",target:"_blank",rel:"noopener noreferrer"},bt=s("the instructions"),mt=s("."),gt=e(`<div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>plugins <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">{</span> <span class="token string">&quot;zbirenbaum/copilot.lua&quot;</span><span class="token punctuation">,</span>
    event <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;VimEnter&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      vim<span class="token punctuation">.</span><span class="token function">defer_fn</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;copilot&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span> <span class="token punctuation">{</span>
	        plugin_manager_path <span class="token operator">=</span> <span class="token function">get_runtime_dir</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">..</span> <span class="token string">&quot;/site/pack/packer&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
      <span class="token keyword">end</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
    <span class="token keyword">end</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token punctuation">{</span> <span class="token string">&quot;zbirenbaum/copilot-cmp&quot;</span><span class="token punctuation">,</span>
    after <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;copilot.lua&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;nvim-cmp&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>  
  <span class="token punctuation">...</span>
<span class="token punctuation">}</span>

<span class="token comment">-- Can not be placed into the config method of the plugins.</span>
lvim<span class="token punctuation">.</span>builtin<span class="token punctuation">.</span>cmp<span class="token punctuation">.</span>formatting<span class="token punctuation">.</span>source_names<span class="token punctuation">[</span><span class="token string">&quot;copilot&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;(Copilot)&quot;</span>
table<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>lvim<span class="token punctuation">.</span>builtin<span class="token punctuation">.</span>cmp<span class="token punctuation">.</span>sources<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name <span class="token operator">=</span> <span class="token string">&quot;copilot&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,1),ht={id:"dial-nvim",tabindex:"-1"},_t=n("a",{class:"header-anchor",href:"#dial-nvim","aria-hidden":"true"},"#",-1),qt=s(),ft={href:"https://github.com/monaqa/dial.nvim",target:"_blank",rel:"noopener noreferrer"},vt=s("dial.nvim"),wt=e(`<p><strong>extended incrementing/decrementing</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;monaqa/dial.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">local</span> dial <span class="token operator">=</span> require <span class="token string">&quot;dial&quot;</span>
    vim<span class="token punctuation">.</span>cmd <span class="token string">[[
    nmap &lt;C-a&gt; &lt;Plug&gt;(dial-increment)
      nmap &lt;C-x&gt; &lt;Plug&gt;(dial-decrement)
      vmap &lt;C-a&gt; &lt;Plug&gt;(dial-increment)
      vmap &lt;C-x&gt; &lt;Plug&gt;(dial-decrement)
      vmap g&lt;C-a&gt; &lt;Plug&gt;(dial-increment-additional)
      vmap g&lt;C-x&gt; &lt;Plug&gt;(dial-decrement-additional)
    ]]</span>

    dial<span class="token punctuation">.</span>augends<span class="token punctuation">[</span><span class="token string">&quot;custom#boolean&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> dial<span class="token punctuation">.</span>common<span class="token punctuation">.</span><span class="token function">enum_cyclic</span> <span class="token punctuation">{</span>
      name <span class="token operator">=</span> <span class="token string">&quot;boolean&quot;</span><span class="token punctuation">,</span>
      strlist <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;false&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    table<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>dial<span class="token punctuation">.</span>config<span class="token punctuation">.</span>searchlist<span class="token punctuation">.</span>normal<span class="token punctuation">,</span> <span class="token string">&quot;custom#boolean&quot;</span><span class="token punctuation">)</span>

    <span class="token comment">-- For Languages which prefer True/False, e.g. python.</span>
    dial<span class="token punctuation">.</span>augends<span class="token punctuation">[</span><span class="token string">&quot;custom#Boolean&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> dial<span class="token punctuation">.</span>common<span class="token punctuation">.</span><span class="token function">enum_cyclic</span> <span class="token punctuation">{</span>
      name <span class="token operator">=</span> <span class="token string">&quot;Boolean&quot;</span><span class="token punctuation">,</span>
      strlist <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;True&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;False&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    table<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>dial<span class="token punctuation">.</span>config<span class="token punctuation">.</span>searchlist<span class="token punctuation">.</span>normal<span class="token punctuation">,</span> <span class="token string">&quot;custom#Boolean&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div>`,2),yt={id:"glow-nvim",tabindex:"-1"},xt=n("a",{class:"header-anchor",href:"#glow-nvim","aria-hidden":"true"},"#",-1),Bt=s(),Rt={href:"https://github.com/npxbr/glow.nvim",target:"_blank",rel:"noopener noreferrer"},Tt=s("glow.nvim"),zt=e(`<p><strong>preview markdown in neovim</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token comment">-- You must install glow globally</span>
<span class="token comment">-- https://github.com/charmbracelet/glow</span>
<span class="token comment">-- yay -S glow</span>
<span class="token punctuation">{</span>
  <span class="token string">&quot;npxbr/glow.nvim&quot;</span><span class="token punctuation">,</span>
  ft <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;markdown&quot;</span><span class="token punctuation">}</span>
  <span class="token comment">-- run = &quot;yay -S glow&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,2),Gt={id:"indent-blankline",tabindex:"-1"},St=n("a",{class:"header-anchor",href:"#indent-blankline","aria-hidden":"true"},"#",-1),Ct=s(),Et={href:"https://github.com/lukas-reineke/indent-blankline.nvim",target:"_blank",rel:"noopener noreferrer"},At=s("indent-blankline"),Pt=e(`<p><strong>indentation guides for every line</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;lukas-reineke/indent-blankline.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">local</span> opts <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token comment">-- char = &quot;\u258F&quot;,</span>
      filetype_exclude <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;alpha&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;help&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;terminal&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;dashboard&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;lspinfo&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;lsp-installer&quot;</span><span class="token punctuation">,</span>
	<span class="token string">&quot;mason&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      buftype_exclude <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;terminal&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      bufname_exclude <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;config.lua&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>

      show_trailing_blankline_indent <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">,</span>
      show_first_indent_level <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">,</span>
      <span class="token comment">-- use_treesitter = false,</span>
    <span class="token punctuation">}</span>

    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;indent_blankline&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span>opts<span class="token punctuation">)</span>
  <span class="token keyword">end</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div>`,2),jt={id:"markdown-preview-nvim",tabindex:"-1"},Ft=n("a",{class:"header-anchor",href:"#markdown-preview-nvim","aria-hidden":"true"},"#",-1),Nt=s(),Vt={href:"https://github.com/iamcco/markdown-preview.nvim",target:"_blank",rel:"noopener noreferrer"},Ht=s("markdown-preview.nvim"),Mt=e(`<p><strong>preview markdown in the browser</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;iamcco/markdown-preview.nvim&quot;</span><span class="token punctuation">,</span>
  run <span class="token operator">=</span> <span class="token string">&quot;cd app &amp;&amp; npm install&quot;</span><span class="token punctuation">,</span>
  ft <span class="token operator">=</span> <span class="token string">&quot;markdown&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>mkdp_auto_start <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,2),Wt={id:"neoscroll",tabindex:"-1"},Lt=n("a",{class:"header-anchor",href:"#neoscroll","aria-hidden":"true"},"#",-1),It=s(),Dt={href:"https://github.com/karb94/neoscroll.nvim",target:"_blank",rel:"noopener noreferrer"},Ot=s("neoscroll"),Yt=e(`<p><strong>smooth scrolling</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;karb94/neoscroll.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;WinScrolled&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;neoscroll&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token comment">-- All these keys will be mapped to their corresponding default scrolling animation</span>
        mappings <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;&lt;C-u&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;C-d&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;C-b&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;C-f&gt;&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;&lt;C-y&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;C-e&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;zt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;zz&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;zb&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        hide_cursor <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>          <span class="token comment">-- Hide cursor while scrolling</span>
        stop_eof <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>             <span class="token comment">-- Stop at &lt;EOF&gt; when scrolling downwards</span>
        use_local_scrolloff <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">,</span> <span class="token comment">-- Use the local scope of scrolloff instead of the global scope</span>
        respect_scrolloff <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">,</span>   <span class="token comment">-- Stop scrolling when the cursor reaches the scrolloff margin of the file</span>
        cursor_scrolls_alone <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- The cursor will keep on scrolling even if the window cannot scroll further</span>
        easing_function <span class="token operator">=</span> <span class="token keyword">nil</span><span class="token punctuation">,</span>        <span class="token comment">-- Default easing function</span>
        pre_hook <span class="token operator">=</span> <span class="token keyword">nil</span><span class="token punctuation">,</span>              <span class="token comment">-- Function to run before the scrolling animation starts</span>
        post_hook <span class="token operator">=</span> <span class="token keyword">nil</span><span class="token punctuation">,</span>              <span class="token comment">-- Function to run after the scrolling animation ends</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,2),Jt={id:"neuron",tabindex:"-1"},Kt=n("a",{class:"header-anchor",href:"#neuron","aria-hidden":"true"},"#",-1),Qt=s(),Ut={href:"https://github.com/oberblastmeister/neuron.nvim",target:"_blank",rel:"noopener noreferrer"},Xt=s("neuron"),Zt=e(`<p><strong>next generation note-taking</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>	<span class="token punctuation">{</span><span class="token string">&quot;oberblastmeister/neuron.nvim&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,2),$t={id:"nvim-lastplace",tabindex:"-1"},ne=n("a",{class:"header-anchor",href:"#nvim-lastplace","aria-hidden":"true"},"#",-1),se=s(),ae={href:"https://github.com/ethanholz/nvim-lastplace",target:"_blank",rel:"noopener noreferrer"},te=s("nvim-lastplace"),ee=e(`<p><strong>pick up where you left off</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>	<span class="token punctuation">{</span>
		<span class="token string">&quot;ethanholz/nvim-lastplace&quot;</span><span class="token punctuation">,</span>
		event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
		config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;nvim-lastplace&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
				lastplace_ignore_buftype <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;quickfix&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;nofile&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;help&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
				lastplace_ignore_filetype <span class="token operator">=</span> <span class="token punctuation">{</span>
					<span class="token string">&quot;gitcommit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;gitrebase&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;svn&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hgcommit&quot;</span><span class="token punctuation">,</span>
				<span class="token punctuation">}</span><span class="token punctuation">,</span>
				lastplace_open_folds <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token keyword">end</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,2),pe={id:"persistence",tabindex:"-1"},oe=n("a",{class:"header-anchor",href:"#persistence","aria-hidden":"true"},"#",-1),ce=s(),le={href:"https://github.com/folke/persistence.nvim",target:"_blank",rel:"noopener noreferrer"},ue=s("persistence"),ie=e(`<p><strong>simple session management</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;folke/persistence.nvim&quot;</span><span class="token punctuation">,</span>
    event <span class="token operator">=</span> <span class="token string">&quot;BufReadPre&quot;</span><span class="token punctuation">,</span> <span class="token comment">-- this will only start session saving when an actual file was opened</span>
    module <span class="token operator">=</span> <span class="token string">&quot;persistence&quot;</span><span class="token punctuation">,</span>
    config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;persistence&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span> <span class="token punctuation">{</span>
        dir <span class="token operator">=</span> vim<span class="token punctuation">.</span>fn<span class="token punctuation">.</span><span class="token function">expand</span><span class="token punctuation">(</span>vim<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>stdpath <span class="token string">&quot;config&quot;</span> <span class="token operator">..</span> <span class="token string">&quot;/session/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        options <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;buffers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;curdir&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tabpages&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;winsize&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Also define keybindings in your <code>config.lua</code></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>  lvim<span class="token punctuation">.</span>builtin<span class="token punctuation">.</span>which_key<span class="token punctuation">.</span>mappings<span class="token punctuation">[</span><span class="token string">&quot;S&quot;</span><span class="token punctuation">]</span><span class="token operator">=</span> <span class="token punctuation">{</span>
    name <span class="token operator">=</span> <span class="token string">&quot;Session&quot;</span><span class="token punctuation">,</span>
    c <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;lua require(&#39;persistence&#39;).load()&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Restore last session for current dir&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    l <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;lua require(&#39;persistence&#39;).load({ last = true })&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Restore last session&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    Q <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;lua require(&#39;persistence&#39;).stop()&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Quit without saving session&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,4),re={id:"todo-comments-nvim",tabindex:"-1"},ke=n("a",{class:"header-anchor",href:"#todo-comments-nvim","aria-hidden":"true"},"#",-1),de=s(),be={href:"https://github.com/folke/todo-comments.nvim",target:"_blank",rel:"noopener noreferrer"},me=s("todo-comments.nvim"),ge=e(`<p><strong>highlight and search for todo comments</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;folke/todo-comments.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;todo-comments&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,2),he={id:"vim-cursorword",tabindex:"-1"},_e=n("a",{class:"header-anchor",href:"#vim-cursorword","aria-hidden":"true"},"#",-1),qe=s(),fe={href:"https://github.com/itchyny/vim-cursorword",target:"_blank",rel:"noopener noreferrer"},ve=s("vim-cursorword"),we=e(`<p><strong>underlines the word under the cursor</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;itchyny/vim-cursorword&quot;</span><span class="token punctuation">,</span>
    event <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;BufEnter&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BufNewFile&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;augroup user_plugin_cursorword&quot;</span><span class="token punctuation">)</span>
      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;autocmd!&quot;</span><span class="token punctuation">)</span>
      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;autocmd FileType NvimTree,lspsagafinder,dashboard,vista let b:cursorword = 0&quot;</span><span class="token punctuation">)</span>
      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;autocmd WinEnter * if &amp;diff || &amp;pvw | let b:cursorword = 0 | endif&quot;</span><span class="token punctuation">)</span>
      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;autocmd InsertEnter * let b:cursorword = 0&quot;</span><span class="token punctuation">)</span>
      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;autocmd InsertLeave * let b:cursorword = 1&quot;</span><span class="token punctuation">)</span>
      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;augroup END&quot;</span><span class="token punctuation">)</span>
      <span class="token keyword">end</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,2),ye={id:"vim-repeat",tabindex:"-1"},xe=n("a",{class:"header-anchor",href:"#vim-repeat","aria-hidden":"true"},"#",-1),Be=s(),Re={href:"https://github.com/tpope/vim-repeat",target:"_blank",rel:"noopener noreferrer"},Te=s("vim-repeat"),ze=e(`<p><strong>enable repeating supported plugin maps with &quot;.&quot;</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span> <span class="token string">&quot;tpope/vim-repeat&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,2),Ge={id:"vim-sanegx",tabindex:"-1"},Se=n("a",{class:"header-anchor",href:"#vim-sanegx","aria-hidden":"true"},"#",-1),Ce=s(),Ee={href:"https://github.com/felipec/vim-sanegx",target:"_blank",rel:"noopener noreferrer"},Ae=s("vim-sanegx"),Pe=e(`<p><strong>open url with <code>gx</code></strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;felipec/vim-sanegx&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),je={id:"vim-surround",tabindex:"-1"},Fe=n("a",{class:"header-anchor",href:"#vim-surround","aria-hidden":"true"},"#",-1),Ne=s(),Ve={href:"https://github.com/tpope/vim-surround",target:"_blank",rel:"noopener noreferrer"},He=s("vim-surround"),Me=e(`<p><strong>mappings to delete, change and add surroundings</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;tpope/vim-surround&quot;</span><span class="token punctuation">,</span>
  
  <span class="token comment">-- make sure to change the value of \`timeoutlen\` if it&#39;s not triggering correctly, see https://github.com/tpope/vim-surround/issues/117</span>
  <span class="token comment">-- setup = function()</span>
    <span class="token comment">--  vim.o.timeoutlen = 500</span>
  <span class="token comment">-- end</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,2),We={id:"vim-wakatime",tabindex:"-1"},Le=n("a",{class:"header-anchor",href:"#vim-wakatime","aria-hidden":"true"},"#",-1),Ie=s(),De={href:"https://github.com/wakatime/vim-wakatime",target:"_blank",rel:"noopener noreferrer"},Oe=s("vim-wakatime"),Ye=e(`<p><strong>metrics, insights, and time tracking automatically generated from your programming activity</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;wakatime/vim-wakatime&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Once installed and synced, add your WakaTime API Key via <code>:WakaTimeApiKey</code> command</p><h2 id="language-specific" tabindex="-1"><a class="header-anchor" href="#language-specific" aria-hidden="true">#</a> Language specific</h2>`,4),Je={id:"bracey",tabindex:"-1"},Ke=n("a",{class:"header-anchor",href:"#bracey","aria-hidden":"true"},"#",-1),Qe=s(),Ue={href:"https://github.com/turbio/bracey.vim",target:"_blank",rel:"noopener noreferrer"},Xe=s("bracey"),Ze=e(`<p><strong>live edit html, css, and javascript</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;turbio/bracey.vim&quot;</span><span class="token punctuation">,</span>
  cmd <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Bracey&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BracyStop&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BraceyReload&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BraceyEval&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  run <span class="token operator">=</span> <span class="token string">&quot;npm install --prefix server&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,2),$e={id:"vim-bundler",tabindex:"-1"},np=n("a",{class:"header-anchor",href:"#vim-bundler","aria-hidden":"true"},"#",-1),sp=s(),ap={href:"https://github.com/tpope/vim-bundler",target:"_blank",rel:"noopener noreferrer"},tp=s("vim-bundler"),ep=e(`<p><strong>lightweight support for ruby&#39;s bundler</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;tpope/vim-bundler&quot;</span><span class="token punctuation">,</span>
  cmd <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Bundler&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bopen&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bsplit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Btabedit&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),pp={id:"vim-rails",tabindex:"-1"},op=n("a",{class:"header-anchor",href:"#vim-rails","aria-hidden":"true"},"#",-1),cp=s(),lp={href:"https://github.com/tpope/vim-rails",target:"_blank",rel:"noopener noreferrer"},up=s("vim-rails"),ip=e(`<p><strong>edit ruby on rails applications</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;tpope/vim-rails&quot;</span><span class="token punctuation">,</span>
  cmd <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;Eview&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Econtroller&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Emodel&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Smodel&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Sview&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Scontroller&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Vmodel&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Vview&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Vcontroller&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Tmodel&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Tview&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Tcontroller&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Rails&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Generate&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Runner&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Extract&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>`,2);function rp(kp,dp){const a=p("ExternalLinkIcon");return o(),c(l,null,[r,k,d,n("h3",b,[m,g,n("a",h,[_,t(a)])]),q,n("h3",f,[v,w,n("a",y,[x,t(a)])]),B,n("h3",R,[T,z,n("a",G,[S,t(a)])]),C,n("h3",E,[A,P,n("a",j,[F,t(a)])]),N,n("h3",V,[H,M,n("a",W,[L,t(a)])]),I,n("h3",D,[O,Y,n("a",J,[K,t(a)])]),Q,n("h3",U,[X,Z,n("a",$,[nn,t(a)])]),sn,n("h3",an,[tn,en,n("a",pn,[on,t(a)])]),cn,n("h3",ln,[un,rn,n("a",kn,[dn,t(a)])]),bn,n("h3",mn,[gn,hn,n("a",_n,[qn,t(a)])]),fn,n("h3",vn,[wn,yn,n("a",xn,[Bn,t(a)])]),Rn,n("h3",Tn,[zn,Gn,n("a",Sn,[Cn,t(a)])]),En,n("h3",An,[Pn,jn,n("a",Fn,[Nn,t(a)])]),Vn,n("h3",Hn,[Mn,Wn,n("a",Ln,[In,t(a)])]),Dn,n("h3",On,[Yn,Jn,n("a",Kn,[Qn,t(a)])]),Un,n("h3",Xn,[Zn,$n,n("a",ns,[ss,t(a)])]),as,n("h3",ts,[es,ps,n("a",os,[cs,t(a)])]),ls,n("h3",us,[is,rs,n("a",ks,[ds,t(a)])]),bs,n("h3",ms,[gs,hs,n("a",_s,[qs,t(a)])]),fs,n("h3",vs,[ws,ys,n("a",xs,[Bs,t(a)])]),Rs,n("h3",Ts,[zs,Gs,n("a",Ss,[Cs,t(a)])]),Es,n("h3",As,[Ps,js,n("a",Fs,[Ns,t(a)])]),Vs,n("h3",Hs,[Ms,Ws,n("a",Ls,[Is,t(a)])]),Ds,n("h3",Os,[Ys,Js,n("a",Ks,[Qs,t(a)])]),Us,n("h3",Xs,[Zs,$s,n("a",na,[sa,t(a)])]),aa,n("h3",ta,[ea,pa,n("a",oa,[ca,t(a)])]),la,n("h3",ua,[ia,ra,n("a",ka,[da,t(a)])]),ba,n("h3",ma,[ga,ha,n("a",_a,[qa,t(a)])]),fa,n("h3",va,[wa,ya,n("a",xa,[Ba,t(a)])]),Ra,n("h3",Ta,[za,Ga,n("a",Sa,[Ca,t(a)])]),Ea,n("h3",Aa,[Pa,ja,n("a",Fa,[Na,t(a)])]),Va,n("h3",Ha,[Ma,Wa,n("a",La,[Ia,t(a)])]),Da,n("h3",Oa,[Ya,Ja,n("a",Ka,[Qa,t(a)])]),Ua,n("h3",Xa,[Za,$a,n("a",nt,[st,t(a)])]),at,n("h3",tt,[et,pt,n("a",ot,[ct,t(a)]),lt,n("a",ut,[it,t(a)])]),rt,n("p",null,[kt,n("a",dt,[bt,t(a)]),mt]),gt,n("h3",ht,[_t,qt,n("a",ft,[vt,t(a)])]),wt,n("h3",yt,[xt,Bt,n("a",Rt,[Tt,t(a)])]),zt,n("h3",Gt,[St,Ct,n("a",Et,[At,t(a)])]),Pt,n("h3",jt,[Ft,Nt,n("a",Vt,[Ht,t(a)])]),Mt,n("h3",Wt,[Lt,It,n("a",Dt,[Ot,t(a)])]),Yt,n("h3",Jt,[Kt,Qt,n("a",Ut,[Xt,t(a)])]),Zt,n("h3",$t,[ne,se,n("a",ae,[te,t(a)])]),ee,n("h3",pe,[oe,ce,n("a",le,[ue,t(a)])]),ie,n("h3",re,[ke,de,n("a",be,[me,t(a)])]),ge,n("h3",he,[_e,qe,n("a",fe,[ve,t(a)])]),we,n("h3",ye,[xe,Be,n("a",Re,[Te,t(a)])]),ze,n("h3",Ge,[Se,Ce,n("a",Ee,[Ae,t(a)])]),Pe,n("h3",je,[Fe,Ne,n("a",Ve,[He,t(a)])]),Me,n("h3",We,[Le,Ie,n("a",De,[Oe,t(a)])]),Ye,n("h3",Je,[Ke,Qe,n("a",Ue,[Xe,t(a)])]),Ze,n("h3",$e,[np,sp,n("a",ap,[tp,t(a)])]),ep,n("h3",pp,[op,cp,n("a",lp,[up,t(a)])]),ip],64)}var gp=u(i,[["render",rp]]);export{gp as default};
